<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CheckingCamera.Infastructure.Resources.Style">

    <local:FontSizeConverter x:Key="FontSizeConverter"/>

    <!--#region ЗАДНИЙ ФОН -->
    <Style x:Key="MainBackGroundUserControlStyle" TargetType="UserControl">
        <Setter Property="Background" Value="#3a454a"/>
    </Style>
    <!--#endregion-->

    <!--#region КНОПКИ -->
    <Style x:Key="SButton" TargetType="Button">

        <Setter Property="BorderThickness" Value="1,1,3,3"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Background" Value="#80e6ff"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Padding="3" BorderBrush="{TemplateBinding Property=BorderBrush}" BorderThickness="{TemplateBinding Property=BorderThickness}" Background="{TemplateBinding Property=Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4682B4"/>
                <Setter Property="BorderBrush" Value="#00B3FC"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#6B8E23"/>
                <Setter Property="BorderBrush" Value="#6B8E23"/>
                <Setter Property="BorderThickness" Value="1,1,1,1"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    <!--#endregion-->

    <!--#region ЗАГОЛОВКИ LABEL-->
    <Style x:Key="SLabelValue" TargetType="Label">

        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="27"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>
    <!--#endregion-->

    <!--#region РАМКИ -->
    <Style x:Key="SBorder" TargetType="Border">

        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="#9cddef"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="#374548"/>

    </Style>
    <!--#endregion-->

    <!--#region ProgressBar -->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Background" Value="#6fae5f"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Height="{TemplateBinding Height}">
                            <Border Background="#000000" CornerRadius="7.5" Opacity="0.05"/>
                            <Border BorderBrush="#000000" BorderThickness="1" CornerRadius="7.5" Opacity="0.1"/>
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Border x:Name="PART_Track"/>
                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="width1"/>
                                        <ColumnDefinition x:Name="width2" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="Animation"  RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Border Background="{TemplateBinding Background}" CornerRadius="7.5">
                                            <Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                            </Viewbox>
                                        </Border>
                                        <Border BorderBrush="#000000" BorderThickness="1" CornerRadius="7.5" Opacity="0.1"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#c5c5c5"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="width1" Property="Width" Value="0.25*"/>
                            <Setter TargetName="width2" Property="Width" Value="0.725*"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
             EndPoint="0.5,1"
             StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
        Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
        Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
        Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
             StartPoint="0,0"
             EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
            Offset="0" />
                <GradientStop Color="#600000FF"
            Offset="0.4" />
                <GradientStop Color="#600000FF"
            Offset="0.6" />
                <GradientStop Color="#000000FF"
            Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--#endregion-->

    <!--#region ЛИСТ БОКС -->
    <Style x:Key="SList" TargetType="ListBox">
        <Setter Property="Foreground" Value="#9CDDEF"/>
        <Setter Property="Background" Value="#2B3A42"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#3B4B53"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4B5B63"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#6B7B83"/>
                            <Setter Property="Foreground" Value="#9CDDEF"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region DataGRID -->
    <Style x:Key="SDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="#2B3A42"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#3B4B53"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="#3B4B53"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="AlternatingRowBackground" Value="#2B3A42"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#4B5B63"/>
        <Setter Property="VerticalGridLinesBrush" Value="#4B5B63"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#4B5B63"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="BorderBrush" Value="#3B4B53"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Style>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="SDataGridCell" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderBrush" Value="#3B4B53"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#6B7B83"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region TEXTBOX -->
    <Style x:Key="STextBox" TargetType="TextBox">
        <Setter Property="Background" Value="#414D53"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="BorderBrush" Value="#9CDDEF"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="border" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="6">
                        <!-- Добавляем ScrollViewer с именем PART_ContentHost -->
                        <ScrollViewer x:Name="PART_ContentHost"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF00FF00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region COMBOBOX -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Border x:Name="templateRoot" 
            BorderThickness="1"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0"
                              Margin="4"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Left"/>
                <Path Grid.Column="1"
                  x:Name="arrow"
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="White"/>
                <Setter TargetName="templateRoot" Property="Background" Value="#009ECF"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="#009ECF"/>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#009ECF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="Background" Value="#EEEEEE"/>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#AAAAAA"/>
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost"
                      Margin="{TemplateBinding Padding}"
                      Focusable="False"
                      HorizontalScrollBarVisibility="Hidden"
                      VerticalScrollBarVisibility="Hidden"
                      IsDeferredScrollingEnabled="False"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="Background" Value="#EEEEEE"/>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#AAAAAA"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SComboBox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="#E5E5E5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderBrush" Value="#009ECF"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                  Template="{StaticResource ComboBoxToggleButton}"
                                  Grid.Column="2"
                                  Focusable="false"
                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Background" Value="#009ECF"/>
                                    <Setter Property="BorderBrush" Value="#009ECF"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="templateRoot" 
                                                    BorderThickness="1"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="20"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter Grid.Column="0"
                                                                      Margin="4"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Left"/>
                                                        <Path Grid.Column="1"
                                                          x:Name="arrow"
                                                          Fill="White"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="White"/>
                                                        <Setter TargetName="templateRoot" Property="Background" Value="#009ECF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="templateRoot" Property="Background" Value="#009ECF"/>
                                                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="#009ECF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="templateRoot" Property="Background" Value="#EEEEEE"/>
                                                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="#AAAAAA"/>
                                                        <Setter Property="Foreground" Value="#888888"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="3,3,23,3"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             Template="{StaticResource ComboBoxTextBox}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             Margin="3,3,23,3"
                             Focusable="True"
                             Background="Transparent"
                             Visibility="Hidden"
                             IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="#E5E5E5"
                                    BorderBrush="#009ECF"
                                    BorderThickness="2"/>
                                <ScrollViewer Margin="4,6,4,6"
                                          SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region TabItem -->
    <!-- Определяем цвета для дизайна -->
    <SolidColorBrush x:Key="TabBackground" Color="#37474F"/>
    <SolidColorBrush x:Key="TabBorder" Color="#00BCD4"/>
    <SolidColorBrush x:Key="TabForeground" Color="#00BCD4"/>
    <SolidColorBrush x:Key="SelectedTabBackground" Color="#00BCD4"/>
    <SolidColorBrush x:Key="SelectedTabForeground" Color="#37474F"/>


    <Style x:Key="STabControl" TargetType="TabControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel HorizontalAlignment="Left" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для TabItem -->
    <Style x:Key="STabItem" TargetType="TabItem">
        <Setter Property="Background" Value="{StaticResource TabBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource TabForeground}"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5,5,5,5">
                            <TextBlock x:Name="ContentSite"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                       TextWrapping="Wrap"  
                                       Margin="10,2" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedTabBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource SelectedTabForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>